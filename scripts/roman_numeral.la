// performs a roman numeral to number conversion

fun from_roman_digit(dig: str): option(num) {
  if (dig == 'I') { ret some(1) }
  else if (dig == 'V') { ret some(5) }
  else if (dig == 'X') { ret some(10) }
  else if (dig == 'L') { ret some(50) }
  else if (dig == 'C') { ret some(100) }
  else if (dig == 'D') { ret some(500) }
  ret none
}

fun to_roman(str: str): option(num) {
  val num: num = 0
  val last: num = inf
  val last_is_sub: bool = false

  val i: num = 0
  while (i < str.len) {
    val roman: num = from_roman_digit(str.char_at(i))?
    if (roman > last) {
      if (last_is_sub) { ret none }
      roman = roman - last - last
      last_is_sub = true
    } else {
      last_is_sub = false
    }

    num = num + roman
    last = roman

    i = i + 1
  }

  ret some(num)
}

print('input roman numeral:')
val roman: num = to_roman(input()) ? {
  print('invalid roman numeral')
  ret
}
print(roman)

